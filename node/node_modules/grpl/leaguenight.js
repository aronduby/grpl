var Q = require('q');

/*
 *	Controller Functions
*/
exports.getByStarts = function(starts){
	var d = Q.defer();

	getPool().getConnection(function(err, db){
		if(err){ d.reject(err); return false; }
		db.query("SELECT *, DATE_FORMAT(starts, '%Y-%m-%d') AS starts FROM league_night WHERE starts=?", [starts], function(err, results){
			if(err){ d.reject(err); return false; }
			if(results.length == 0)
				d.reject('No league night found on that date');

			var night = new LeagueNight(results[0]);
			
			// get the subs			
			var sub_sql = "SELECT lnsub.*, CONCAT(p.first_name,' ',p.last_name) AS player " +
				"FROM league_night_sub lnsub " +
				"LEFT JOIN player p USING(name_key) " +
				"WHERE starts=?";
			db.query(sub_sql, [starts], function(err, rows){
				if(err){ d.reject(err); return false; }
				var obj = {};
				rows.forEach(function(r){
					obj[r.name_key] = r;
				});
				night.subs = obj;

				d.resolve(night);
				db.release();
			});
		});
	});

	return d.promise;
}


exports.getAllForSeason = function(season_id){
	var d = Q.defer(),
		nights = [];

	getPool().getConnection(function(err, db){
		if(err){ d.reject(err); return false; }

		var sql = "SELECT *, DATE_FORMAT(starts, '%Y-%m-%d') AS starts FROM league_night WHERE season_id=? ORDER BY starts DESC";
		db.query(sql, [season_id], function(err, results){
			if(err){ d.reject(err); return false; }
			results.forEach(function(row){
				nights.push(new LeagueNight(row));
			});
			db.release();
			d.resolve(nights);
		});
	});

	return d.promise;
}



function getPool(){ return module.parent.exports.pool; }
function nl2br(str, is_xhtml){
	var breakTag = (is_xhtml || typeof is_xhtml === 'undefined') ? '<br ' + '/>' : '<br>'; // Adjust comment to avoid issue on phpjs.org display
	return (str + '').replace(/([^>\r\n]?)(\r\n|\n\r|\r|\n)/g, '$1' + breakTag + '$2');
}

/*
 *	Actual Object
*/
exports.LeagueNight = LeagueNight;
function LeagueNight(opts){
	for(prop in opts){
		if (prop in this) {
			this[prop] = opts[prop];
		}
	}

	if(this.note != null)
		this.note = nl2br(this.note);
}
LeagueNight.prototype.night_id = null;
LeagueNight.prototype.season_id = null;
LeagueNight.prototype.title = null;
LeagueNight.prototype.starts = null;
LeagueNight.prototype.note = null;
LeagueNight.prototype.divisions = null;
LeagueNight.prototype.subs = null;

LeagueNight.prototype.save = function(){
	var self = this,
		d = Q.defer();

	getPool().getConnection(function(err, connection){
		if(err){ d.reject(err); return false; }

		var ln_data = {
			'night_id': self.night_id,
			'season_id': self.season_id,
			'title': self.title,
			'starts': self.starts,
			'note': self.note
		};

		// console.log(ln_data);

		var query = connection.query("INSERT INTO league_night SET ? ON DUPLICATE KEY UPDATE ?", [ln_data, ln_data], function(err, result) {
			if(err){ d.reject(err); return false; }
			self.night_id = result.insertId;
			d.resolve(self);
		});
		// console.log(query.sql);
	});

	return d.promise;
}